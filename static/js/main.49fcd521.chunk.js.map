{"version":3,"sources":["GiftCardAmount.js","GiftCardAmountCustom.js","InputErrorMessage.js","TextInput.js","GiftCardForm.js","App.js","serviceWorker.js","index.js"],"names":["GiftCardAmount","react_default","a","createElement","Fragment","id","concat","this","props","amount","type","name","value","onChange","setAmount","htmlFor","React","Component","GiftCardAmountCustom","className","error","autoComplete","placeholder","handleChange","InputErrorMessage","message","Input","label","src_InputErrorMessage","ERROR_MESSAGES","GiftCardForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","errors","fields","validate","timer","bind","assertThisInitialized","setCustomAmount","submitForm","updateStateFields","validateForm","document","getElementById","getElementsByName","forEach","radio","checked","e","target","setState","clearCustomAmountInput","_this2","clearTimeout","setTimeout","validateAmount","deselectRadioControls","_this3","preventDefault","alert","recipientName","senderName","isValid","minAmount","maxAmount","emailPattern","RegExp","recipientEmail","test","senderEmail","values","length","amountText","noValidate","onSubmit","src_GiftCardAmount","src_GiftCardAmountCustom","TextInput","App","src_GiftCardForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49fcd521.chunk.js","sourcesContent":["import React from \"react\";\n\nclass GiftCardAmount extends React.Component {\n  render() {\n    return(\n      <React.Fragment>\n        <input\n          id={`gift-card-amount__${this.props.amount}`}\n          type=\"radio\"\n          name=\"amount\"\n          value={this.props.amount}\n          onChange={this.props.setAmount}\n        />\n\n        <label htmlFor={`gift-card-amount__${this.props.amount}`}>\n          ${this.props.amount}\n        </label>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default GiftCardAmount;","import React from \"react\";\n\nclass GiftCardAmountCustom extends React.Component {\n  render() {\n    return(\n      <div className={`input-group${this.props.error ? ' has-error' : ''}`}>\n        <label htmlFor=\"gift-card-amount__custom\">$</label>\n\n        <input\n          id=\"gift-card-amount__custom\"\n          type=\"number\"\n          autoComplete=\"off\"\n          placeholder=\"Other\"\n          onChange={this.props.handleChange}\n        />\n      </div>\n    )\n  }\n}\n\nexport default GiftCardAmountCustom;","import React from \"react\";\n\nclass InputErrorMessage extends React.Component {\n  render() {\n    return(\n      <React.Fragment>\n        {this.props.message &&\n          <span className=\"error-message\">\n            {this.props.message}\n          </span>\n        }\n      </React.Fragment>\n    )\n  }\n}\n\nexport default InputErrorMessage;","import React from \"react\";\nimport InputErrorMessage from \"./InputErrorMessage\";\n\nclass Input extends React.Component {\n  render() {\n    return(\n      <div className={`input-wrapper${this.props.error ? ' has-error' : ''}`}>\n        <label htmlFor={this.props.id}>{this.props.label}</label>\n\n        <input\n          id={this.props.id}\n          name={this.props.name}\n          type=\"text\"\n          placeholder={this.props.placeholder}\n          value={this.props.value}\n          onChange={this.props.handleChange}\n        />\n\n        <InputErrorMessage message={this.props.error} />\n      </div>\n    )\n  }\n}\n\nexport default Input;","import React from 'react';\nimport GiftCardAmount from './GiftCardAmount';\nimport GiftCardAmountCustom from './GiftCardAmountCustom';\nimport InputErrorMessage from './InputErrorMessage';\nimport TextInput from './TextInput';\n\nconst ERROR_MESSAGES = {\n  amount: 'Please enter a gift card value between $5 and $500.',\n  recipientName: 'Enter the recipient\\'s name.',\n  recipientEmail: 'Enter a valid email address for the recipient',\n  senderName: 'Enter the sender\\'s name',\n  senderEmail: 'Enter a valid email address for the sender'\n}\nconst TIMER_DELAY = 500;\n\nclass GiftCardForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errors: {},\n      fields: {},\n      validate: false\n    }\n\n    this.timer = null;\n    this.setAmount = this.setAmount.bind(this);\n    this.setCustomAmount = this.setCustomAmount.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.updateStateFields = this.updateStateFields.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n  }\n\n  clearCustomAmountInput() {\n    document.getElementById('gift-card-amount__custom').value = '';\n  }\n\n  deselectRadioControls() {\n    document.getElementsByName('amount').forEach(radio => {\n      radio.checked = false;\n    });\n  }\n\n  setAmount(e) {\n    let fields = this.state.fields;\n    let errors = this.state.errors;\n\n    fields.amount = e.target.value;\n    errors.amount = '';\n    this.setState({ fields, errors });\n    this.clearCustomAmountInput();\n  }\n\n  setCustomAmount(e) {\n    let value = e.target.value;\n\n    clearTimeout(this.timer);\n    this.timer = setTimeout(() => this.validateAmount(value), TIMER_DELAY);\n\n    if (value !== '') this.deselectRadioControls();\n  }\n\n  submitForm(e) {\n    const fields = this.state.fields;\n\n    e.preventDefault();\n\n    this.setState({ validate: true }, () => {\n      if (this.validateForm()) {\n        alert(`A $${fields.amount} gift card for ${fields.recipientName} from ${fields.senderName} has been added to your cart.`);\n        this.clearCustomAmountInput();\n        this.deselectRadioControls();\n        this.setState({ fields: {}, errors: {}, validate: false });\n      }\n    });\n  }\n\n  updateStateFields(e) {\n    let fields = this.state.fields;\n\n    fields[e.target.name] = e.target.value;\n    this.setState({ fields });\n    this.validateForm();\n  }\n\n  validateAmount(value) {\n    let fields = this.state.fields;\n    let errors = this.state.errors;\n    let isValid = true;\n\n    fields.amount = value;\n\n    if (value && (value < this.props.minAmount || value > this.props.maxAmount)) {\n      isValid = false;\n      errors.amount = ERROR_MESSAGES.amount\n    } else {\n      isValid = true;\n      errors.amount = '';\n    }\n\n    this.setState({ fields, errors });\n\n    return isValid;\n  }\n\n  validateForm() {\n    const emailPattern = new RegExp(/\\S+@\\S+/);\n    let fields = this.state.fields;\n    let errors = {}\n    let isValid = true;\n\n    if (this.state.validate) {\n      if (!fields.amount || !this.validateAmount(fields.amount)) {\n        errors.amount = ERROR_MESSAGES.amount;\n      }\n\n      if (!fields.recipientName) {\n        errors.recipientName = ERROR_MESSAGES.recipientName;\n      }\n\n      if (!fields.recipientEmail || !emailPattern.test(fields.recipientEmail)) {\n        errors.recipientEmail = ERROR_MESSAGES.recipientEmail;\n      }\n\n      if (!fields.senderName) {\n        errors.senderName = ERROR_MESSAGES.senderName;\n      }\n\n      if (!fields.senderEmail || !emailPattern.test(fields.recipientEmail)) {\n        errors.senderEmail = ERROR_MESSAGES.senderEmail;\n      }\n    }\n\n    this.setState({ errors });\n\n    return Object.values(errors).length === 0 ? isValid : !isValid;\n  }\n\n  render() {\n    const amountText = this.state.fields.amount && !this.state.errors.amount ? `$${this.state.fields.amount}` : '';\n\n    return (\n      <form id=\"gift-card-form\" noValidate onSubmit={this.submitForm}>\n        <fieldset className=\"gift-card-amount section-margin\">\n          <legend>Select a gift card amount</legend>\n\n          <span className=\"additional-description\">\n            Choose an amount between ${this.props.minAmount} and ${this.props.maxAmount}\n          </span>\n\n          <div className=\"form-group gift-card-amount__options\">\n            <GiftCardAmount amount=\"25\" setAmount={this.setAmount} />\n            <GiftCardAmount amount=\"50\" setAmount={this.setAmount} />\n            <GiftCardAmount amount=\"100\" setAmount={this.setAmount} />\n            <GiftCardAmount amount=\"200\" setAmount={this.setAmount} />\n            <GiftCardAmountCustom\n              error={this.state.errors.amount}\n              handleChange={this.setCustomAmount}\n            />\n          </div>\n\n          <InputErrorMessage message={this.state.errors.amount} />\n        </fieldset>\n\n        <fieldset className=\"section-margin\">\n          <legend>Send a {amountText} gift card to:</legend>\n\n          <div className=\"form-group flex-equal-widths\">\n            <TextInput\n              error={this.state.errors.recipientName}\n              handleChange={this.updateStateFields}\n              id=\"recipient-name\"\n              label=\"Recipient's Name\"\n              name=\"recipientName\"\n              placeholder=\"Name of recipient\"\n              value={this.state.fields.recipientName || ''}\n            />\n\n            <TextInput\n              error={this.state.errors.recipientEmail}\n              handleChange={this.updateStateFields}\n              id=\"recipient-email\"\n              label=\"Recipient's Email\"\n              name=\"recipientEmail\"\n              placeholder=\"example@domain.com\"\n              value={this.state.fields.recipientEmail || ''}\n            />\n          </div>\n        </fieldset>\n\n        <fieldset className=\"gift-card__information section-margin\">\n          <legend>From:</legend>\n\n          <div className=\"form-group flex-equal-widths\">\n            <TextInput\n              error={this.state.errors.senderName}\n              handleChange={this.updateStateFields}\n              id=\"sender-name\"\n              label=\"Sender's Name\"\n              name=\"senderName\"\n              placeholder=\"Name of Sender\"\n              value={this.state.fields.senderName || ''}\n            />\n\n            <TextInput\n              error={this.state.errors.senderEmail}\n              handleChange={this.updateStateFields}\n              id=\"sender-email\"\n              label=\"Sender's Email\"\n              name=\"senderEmail\"\n              placeholder=\"example@domain.com\"\n              value={this.state.fields.senderEmail || ''}\n            />\n          </div>\n        </fieldset>\n\n        <input type=\"submit\" value=\"Add to cart\" />\n      </form>\n    )\n  }\n}\n\nexport default GiftCardForm;","import React from 'react';\nimport './App.scss';\nimport GiftCardForm from './GiftCardForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GiftCardForm minAmount={5} maxAmount={500} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}